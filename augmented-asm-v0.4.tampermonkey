{"created_by":"Tampermonkey","version":"1","scripts":[{"name":"Augmented-ASM","options":{"check_for_updates":false,"comment":null,"compatopts_for_requires":true,"compat_wrappedjsobject":false,"compat_metadata":false,"compat_foreach":false,"compat_prototypes":false,"noframes":null,"run_at":"document-end","override":{"use_includes":[],"orig_includes":[],"merge_includes":true,"use_matches":[],"orig_matches":["https://servicecentre.csiro.au/Production/core.aspx"],"merge_matches":true,"use_excludes":[],"orig_excludes":[],"merge_excludes":true,"use_connects":[],"merge_connects":true,"use_blockers":[],"orig_run_at":"document-end","orig_noframes":null,"orig_connects":["http://localhost:3000"]}},"storage":{"ts":1622287283165,"data":{}},"enabled":true,"position":1,"uuid":"a22c086c-6526-4143-a2c3-6a0cc966589f","source":""}]}